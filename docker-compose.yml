services:
  index-postgres:
    image: 'postgres:16-alpine'
    restart: unless-stopped
    ports:
      - '6541:5432' # Use a port unlikely to be in use so the example "Just Works"
    environment:
      - PGUSER="DappResearch"
      - PGPASSWORD="FarcasterIndexer"
      - PGHOST='0.0.0.0'
      - POSTGRES_DB=DappResearch
      - POSTGRES_USER=DappResearch
      - POSTGRES_PASSWORD=FarcasterIndexer
    volumes:
      - ./db/postgres-data:/var/lib/postgresql/data
    healthcheck:
      # Need to specify name/user to avoid `FATAL: role "root" does not exist` errors in logs
      test: [ 'CMD-SHELL', 'env', 'pg_isready', '--dbname', '$$POSTGRES_DB', '-U', '$$POSTGRES_USER' ]
      interval: 10s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          cpus: '8.0'
          memory: 16384MB
    networks:
      - index-network

  index-redis:
    image: 'redis:7.2-alpine'
    restart: unless-stopped
    command: --save 1 1 --loglevel warning --maxmemory-policy noeviction
    volumes:
      - ./db/redis-data:/data
    ports:
      - '16379:6379'
    healthcheck:
      test: [ 'CMD-SHELL', 'redis-cli', 'ping' ]
      interval: 10s
      timeout: 10s
      retries: 3
      start_period: 5s
    deploy:
      resources:
        limits:
          cpus: '8.0'
          memory: 16384MB
    networks:
      - index-network
      
  index-app:
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - ./:/app  # Adjust this to your local store path
    command: [ "/app/start.sh" ]  # Update with your script name
    ports:
      - "8080:3001" # Adjust port as needed
    networks:
      - index-network

networks:
  index-network:
    driver: "bridge"